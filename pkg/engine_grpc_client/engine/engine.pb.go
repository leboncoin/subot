// Code generated by protoc-gen-go. DO NOT EDIT.
// source: engine.proto

package supportanalyticsengine

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Text struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Text) Reset()         { *m = Text{} }
func (m *Text) String() string { return proto.CompactTextString(m) }
func (*Text) ProtoMessage()    {}
func (*Text) Descriptor() ([]byte, []int) {
	return fileDescriptor_770b178c3aab763f, []int{0}
}

func (m *Text) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Text.Unmarshal(m, b)
}
func (m *Text) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Text.Marshal(b, m, deterministic)
}
func (m *Text) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Text.Merge(m, src)
}
func (m *Text) XXX_Size() int {
	return xxx_messageInfo_Text.Size(m)
}
func (m *Text) XXX_DiscardUnknown() {
	xxx_messageInfo_Text.DiscardUnknown(m)
}

var xxx_messageInfo_Text proto.InternalMessageInfo

func (m *Text) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Category struct {
	Category             string   `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Score                float32  `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Category) Reset()         { *m = Category{} }
func (m *Category) String() string { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()    {}
func (*Category) Descriptor() ([]byte, []int) {
	return fileDescriptor_770b178c3aab763f, []int{1}
}

func (m *Category) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Category.Unmarshal(m, b)
}
func (m *Category) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Category.Marshal(b, m, deterministic)
}
func (m *Category) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Category.Merge(m, src)
}
func (m *Category) XXX_Size() int {
	return xxx_messageInfo_Category.Size(m)
}
func (m *Category) XXX_DiscardUnknown() {
	xxx_messageInfo_Category.DiscardUnknown(m)
}

var xxx_messageInfo_Category proto.InternalMessageInfo

func (m *Category) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Category) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type Categories struct {
	Categories           []*Category `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Categories) Reset()         { *m = Categories{} }
func (m *Categories) String() string { return proto.CompactTextString(m) }
func (*Categories) ProtoMessage()    {}
func (*Categories) Descriptor() ([]byte, []int) {
	return fileDescriptor_770b178c3aab763f, []int{2}
}

func (m *Categories) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Categories.Unmarshal(m, b)
}
func (m *Categories) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Categories.Marshal(b, m, deterministic)
}
func (m *Categories) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Categories.Merge(m, src)
}
func (m *Categories) XXX_Size() int {
	return xxx_messageInfo_Categories.Size(m)
}
func (m *Categories) XXX_DiscardUnknown() {
	xxx_messageInfo_Categories.DiscardUnknown(m)
}

var xxx_messageInfo_Categories proto.InternalMessageInfo

func (m *Categories) GetCategories() []*Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

func init() {
	proto.RegisterType((*Text)(nil), "supportanalyticsengine.Text")
	proto.RegisterType((*Category)(nil), "supportanalyticsengine.Category")
	proto.RegisterType((*Categories)(nil), "supportanalyticsengine.Categories")
}

func init() { proto.RegisterFile("engine.proto", fileDescriptor_770b178c3aab763f) }

var fileDescriptor_770b178c3aab763f = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xcd, 0x4b, 0xcf,
	0xcc, 0x4b, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x2b, 0x2e, 0x2d, 0x28, 0xc8, 0x2f,
	0x2a, 0x49, 0xcc, 0x4b, 0xcc, 0xa9, 0x2c, 0xc9, 0x4c, 0x2e, 0x86, 0xc8, 0x2a, 0x49, 0x71, 0xb1,
	0x84, 0xa4, 0x56, 0x94, 0x08, 0x09, 0x71, 0xb1, 0x94, 0xa4, 0x56, 0x94, 0x48, 0x30, 0x2a, 0x30,
	0x6a, 0x70, 0x06, 0x81, 0xd9, 0x4a, 0x36, 0x5c, 0x1c, 0xce, 0x89, 0x25, 0xa9, 0xe9, 0xf9, 0x45,
	0x95, 0x42, 0x52, 0x5c, 0x1c, 0xc9, 0x50, 0x36, 0x54, 0x0d, 0x9c, 0x2f, 0x24, 0xc2, 0xc5, 0x5a,
	0x9c, 0x9c, 0x5f, 0x94, 0x2a, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x14, 0x04, 0xe1, 0x28, 0xf9, 0x71,
	0x71, 0x41, 0x75, 0x67, 0xa6, 0x16, 0x0b, 0x39, 0x70, 0x71, 0x25, 0xc3, 0x79, 0x12, 0x8c, 0x0a,
	0xcc, 0x1a, 0xdc, 0x46, 0x0a, 0x7a, 0xd8, 0x1d, 0xa5, 0x07, 0xb3, 0x35, 0x08, 0x49, 0x8f, 0xd1,
	0x7e, 0x46, 0x2e, 0x36, 0x57, 0xb0, 0xbc, 0x50, 0x14, 0x97, 0x88, 0x23, 0x48, 0x4b, 0x71, 0xaa,
	0x6f, 0x6a, 0x71, 0x71, 0x62, 0x7a, 0xaa, 0x4f, 0x62, 0x52, 0x6a, 0x4e, 0xb1, 0x90, 0x0c, 0x2e,
	0x03, 0x41, 0x5e, 0x94, 0x52, 0x22, 0x60, 0x5d, 0x66, 0x6a, 0xb1, 0x12, 0x83, 0x50, 0x24, 0x97,
	0x30, 0xaa, 0xd9, 0x21, 0xf9, 0xf9, 0xd4, 0x31, 0x3a, 0x89, 0x0d, 0x1c, 0x15, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x4f, 0xa1, 0xcb, 0xf4, 0x9a, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EngineClient is the client API for Engine service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EngineClient interface {
	AnalyseMessageLabels(ctx context.Context, in *Text, opts ...grpc.CallOption) (*Categories, error)
	AnalyseMessageTools(ctx context.Context, in *Text, opts ...grpc.CallOption) (*Categories, error)
}

type engineClient struct {
	cc *grpc.ClientConn
}

func NewEngineClient(cc *grpc.ClientConn) EngineClient {
	return &engineClient{cc}
}

func (c *engineClient) AnalyseMessageLabels(ctx context.Context, in *Text, opts ...grpc.CallOption) (*Categories, error) {
	out := new(Categories)
	err := c.cc.Invoke(ctx, "/supportanalyticsengine.Engine/AnalyseMessageLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *engineClient) AnalyseMessageTools(ctx context.Context, in *Text, opts ...grpc.CallOption) (*Categories, error) {
	out := new(Categories)
	err := c.cc.Invoke(ctx, "/supportanalyticsengine.Engine/AnalyseMessageTools", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EngineServer is the server API for Engine service.
type EngineServer interface {
	AnalyseMessageLabels(context.Context, *Text) (*Categories, error)
	AnalyseMessageTools(context.Context, *Text) (*Categories, error)
}

// UnimplementedEngineServer can be embedded to have forward compatible implementations.
type UnimplementedEngineServer struct {
}

func (*UnimplementedEngineServer) AnalyseMessageLabels(ctx context.Context, req *Text) (*Categories, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnalyseMessageLabels not implemented")
}
func (*UnimplementedEngineServer) AnalyseMessageTools(ctx context.Context, req *Text) (*Categories, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnalyseMessageTools not implemented")
}

func RegisterEngineServer(s *grpc.Server, srv EngineServer) {
	s.RegisterService(&_Engine_serviceDesc, srv)
}

func _Engine_AnalyseMessageLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Text)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EngineServer).AnalyseMessageLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supportanalyticsengine.Engine/AnalyseMessageLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EngineServer).AnalyseMessageLabels(ctx, req.(*Text))
	}
	return interceptor(ctx, in, info, handler)
}

func _Engine_AnalyseMessageTools_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Text)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EngineServer).AnalyseMessageTools(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supportanalyticsengine.Engine/AnalyseMessageTools",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EngineServer).AnalyseMessageTools(ctx, req.(*Text))
	}
	return interceptor(ctx, in, info, handler)
}

var _Engine_serviceDesc = grpc.ServiceDesc{
	ServiceName: "supportanalyticsengine.Engine",
	HandlerType: (*EngineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AnalyseMessageLabels",
			Handler:    _Engine_AnalyseMessageLabels_Handler,
		},
		{
			MethodName: "AnalyseMessageTools",
			Handler:    _Engine_AnalyseMessageTools_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "engine.proto",
}
